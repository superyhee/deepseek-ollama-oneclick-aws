Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      Tags:
        - Key: Name
          Value: "My VPC"

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: "My IGW"

  MyVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: "10.0.1.0/24"
      VpcId: !Ref MyVPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: "My Public Subnet"

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: "My Route Table"

  MyDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: MyVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref MyInternetGateway

  MySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnet
      RouteTableId: !Ref MyRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "My Security Group"
      GroupDescription: "My security group"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 11434
          CidrIp: 0.0.0.0/0

  MyInstance:
    Type: AWS::EC2::Instance
    DeletionPolicy: Retain
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref InstanceAMI
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 100
            VolumeType: gp3
      "Tags" : [
            {"Key" : "Name", "Value" : "stablediffusion-onclick"},
        ]
      KeyName: !Ref KeyPairName
      # SecurityGroupIds:
      #   - !Ref MySecurityGroup
      # SubnetId: !Ref MyPublicSubnet
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: true
          SubnetId: !Ref MyPublicSubnet
          GroupSet:
            - !Ref MySecurityGroup
      UserData:
        'Fn::Base64': |
            #!/bin/bash
            sudo -i
            apt update -y
            apt upgrade -y
            # apt install nvidia-driver-525 -y
            sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
            add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
            apt install -y docker-ce
            curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
            curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
            sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
            tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
            apt-get update
            apt-get install -y nvidia-container-toolkit
            nvidia-ctk runtime configure --runtime=docker
            systemctl restart docker
            docker run -d --gpus=all -v ollama:/root/.ollama -p 11434:11434 --name ollama --restart always ollama/ollama
            docker exec -it ollama ollama pull gemma:2b
            docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v ollama-webui:/app/backend/data --name ollama-webui --restart always ghcr.io/ollama-webui/ollama-webui:main
  MyEIP:
    Type: AWS::EC2::EIP

  MyEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref MyInstance
      EIP: !Ref MyEIP

Outputs:
  ElasticIP:
    Description: The Elastic IP address
    Value: !Ref MyEIP
    Export:
      Name: MyElasticIP
  # MyVolume:
  #   Type: AWS::EC2::Volume
  #   Properties:
  #     Size: 1
  #     AvailabilityZone: !Select [0, !GetAZs ""]
  #     Tags:
  #     - Key: Name
  #       Value: "My Volume"

  # MyVolumeAttachment:
  #   Type: AWS::EC2::VolumeAttachment
  #   Properties:
  #     InstanceId: !Ref MyInstance
  #     VolumeId: !Ref MyVolume
  #     Device: /dev/xvdf 

Parameters:
  InstanceAMI:
    Type: AWS::EC2::Image::Id
    Description: ID of the AMI to use for the EC2 instance 
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of the SSH key pair to use for the EC2 instance   
  InstanceType:
    Type: String
    Description: EC2 instance type
    Default: g4dn.xlarge
    AllowedValues:
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.12xlarge
      - g4dn.16xlarge
      - g5.xlarge
      - g5.2xlarge
      - g5.4xlarge
      - g5.8xlarge
      - g5.12xlarge
      - g5.24xlarge
